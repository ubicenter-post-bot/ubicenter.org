<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/uk/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2021-06-15T09:53:21+00:00</updated>
  <id>/tag/uk/feed.xml</id>

  
  
  

  
    <title type="html">UBI Center | </title>
  

  
    <subtitle>Analyzing universal basic income policies with open-source research</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Progressive adjustments to the Liberal Democrat UBI Working Group’s reforms</title>
      <link href="/progressive-adjustments-lib-dem-working-group" rel="alternate" type="text/html" title="Progressive adjustments to the Liberal Democrat UBI Working Group's reforms" />
      <published>2021-06-07T00:00:00+00:00</published>
      <updated>2021-06-07T00:00:00+00:00</updated>
      <id>/progressive-adjustments-lib-dem-working-group</id>
      <content type="html" xml:base="/progressive-adjustments-lib-dem-working-group">&lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://requirejs.org/docs/release/2.3.5/minified/require.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Yesterday, we published an &lt;a href=&quot;/lib-dem-policy-paper&quot;&gt;analysis&lt;/a&gt; of universal basic income reforms described in the Liberal Democrat UBI Working Group’s &lt;a href=&quot;https://d3n8a8pro7vhmx.cloudfront.net/libdems/pages/1811/attachments/original/1621669347/145_-_Universal_Basic_Income.docx_%281%29.pdf?1621669347&quot;&gt;discussion paper&lt;/a&gt;. In the working group’s words, their paper “is designed to stimulate debate and discussion within the Party and outside; based on the response generated and on the deliberations of the working group a full policy paper will be drawn up and presented to Conference for debate.”&lt;/p&gt;

&lt;p&gt;In this follow-up, we model a budget-neutral version of the reforms put forth in the working group paper, as well as a variety of (also budget-neutral) adjustments to those reforms. While the working group’s reform would reduce poverty and inequality, we find that these adjustments, which make the UBIs more generous and inclusive, would augment their effects substantially.&lt;/p&gt;

&lt;h2 id=&quot;the-working-groups-ubi-reform&quot;&gt;The working group’s UBI reform&lt;/h2&gt;

&lt;p&gt;The working group paper suggested a range of UBI amounts: 45, 60, 75, and 95 pounds per week for working-age adults. The cost was partly offset by lowering the annual Personal Allowance (for working-age adults) from £12,500 to £2,500 and the weekly National Insurance Primary Threshold from £184 to £50;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; these both reduce the amount of earnings one can receive before being taxed. The reform also treated the UBI as earned income for the purposes of means-tested benefits.&lt;/p&gt;

&lt;p&gt;The result was progressive: poverty would fall by at least 17 percent, deep poverty (the population share with income below half the poverty threshold) by at least 50 percent, and inequality (as measured by the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gini_coefficient&quot;&gt;Gini index&lt;/a&gt;) by at least 2.8 percent. However, even the least generous of the four UBI policies added over £20 billion to the deficit.&lt;/p&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_verbal_tonight_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_verbal_tonight_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_verbal_tonight_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;If made budget-neutral, this structure of pay-fors will fund a UBI of £42 per week. That policy would reduce poverty by 11%, deep poverty by 46%, and inequality by 2.4%, while leaving 39% of Britons better off and 47% worse off. For an apples-to-apples comparison, we consider this the baseline reform against which other adjustments are evaluated.&lt;/p&gt;

&lt;h2 id=&quot;adjustments-to-the-working-groups-ubi-reform&quot;&gt;Adjustments to the working group’s UBI reform&lt;/h2&gt;

&lt;p&gt;We apply several modifications to the working group’s UBI reform that broaden the tax base (funding larger UBIs), broaden the recipient base, and change how the UBI is treated. Specifically, we model:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Including children in the UBI&lt;/li&gt;
  &lt;li&gt;Repealing the Personal Allowance and National Insurance Primary Threshold entirely&lt;/li&gt;
  &lt;li&gt;Including pensioners in both the Personal Allowance reduction and the UBI&lt;/li&gt;
  &lt;li&gt;Exempting the UBI from means-testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to modeling each of these changes individually, we consider applying all four changes together.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_disciplinary_beginning()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_disciplinary_beginning&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
from ubicenter import format_fig
from openfisca_uk import Microsimulation
import numpy as np
import pandas as pd
import plotly.express as px
from reform import (
    WA_adult_UBI,
    all_UBI,
    adult_UBI,
    non_pensioner_UBI,
    set_PA,
    set_PT,
    set_PA_for_WA_adults,
    include_UBI_in_means_tests,
    net_cost,
)

reform_df = pd.DataFrame(
    {
        &quot;Adult PA (£/year)&quot;: [12500, 2500, 0, 2500, 2500, 2500, 0],
        &quot;Pensioner PA (£/year)&quot;: [12500, 12500, 12500, 2500, 12500, 12500, 0],
        &quot;NI Primary Threshold (£/week)&quot;: [183, 50, 0, 50, 50, 50, 0],
        &quot;UBI for children&quot;: [False, False, False, False, True, False, True],
        &quot;UBI for pensioners&quot;: [False, False, False, True, False, False, True],
        &quot;UBI in means tests&quot;: [False, True, True, True, True, False, False],
    }
)

baseline = Microsimulation(year=2020)


def create_reform(params: dict):
    reform = []
    reform += [set_PA(float(params[&quot;Pensioner PA (£/year)&quot;]))]
    reform += [set_PA_for_WA_adults(float(params[&quot;Adult PA (£/year)&quot;]))]
    reform += [set_PT(float(params[&quot;NI Primary Threshold (£/week)&quot;]))]
    tax_reform_sim = Microsimulation(*reform, year=2020)
    revenue = net_cost(tax_reform_sim, baseline)
    if params[&quot;UBI for children&quot;]:  # doesn't handle non-adult UBIs
        if params[&quot;UBI for pensioners&quot;]:
            ubi_reform_func = all_UBI
            population = baseline.calc(&quot;people&quot;).sum()
        else:
            ubi_reform_func = non_pensioner_UBI
            population = (
                baseline.calc(&quot;is_child&quot;).sum()
                + baseline.calc(&quot;is_WA_adult&quot;).sum()
            )
    else:
        if params[&quot;UBI for pensioners&quot;]:
            ubi_reform_func = adult_UBI
            population = baseline.calc(&quot;is_adult&quot;).sum()
        else:
            ubi_reform_func = WA_adult_UBI
            population = baseline.calc(&quot;is_WA_adult&quot;).sum()
    if params[&quot;UBI in means tests&quot;]:
        ubi_amount = int(revenue / population / 52) * 52
        net_revenue = -net_cost(
            baseline,
            Microsimulation(
                (
                    reform,
                    ubi_reform_func(ubi_amount),
                    include_UBI_in_means_tests(),
                ),
                year=2020,
            ),
        )
        prev_amounts = []
        while (
            net_revenue &amp;gt; 1e9 or net_revenue &amp;lt; -1e9
        ) and ubi_amount not in prev_amounts:
            old_ubi_amount = ubi_amount
            prev_amounts += [old_ubi_amount]
            ubi_amount += 1 * 52 * (2 * (net_revenue &amp;gt; 0) - 1)
            net_revenue = -net_cost(
                baseline,
                Microsimulation(
                    (
                        reform,
                        ubi_reform_func(ubi_amount),
                        include_UBI_in_means_tests(),
                    ),
                    year=2020,
                ),
            )
        reform += [ubi_reform_func(ubi_amount), include_UBI_in_means_tests()]
    else:
        ubi_amount = int(revenue / population / 52) * 52
        reform += [ubi_reform_func(ubi_amount)]
    return tuple(reform)


def rel(x, y):
    return (y - x) / x


UBI_amounts = []
poverty_changes = []
deep_poverty_changes = []
costs = []
winners = []
losers = []
gini_changes = []

from tqdm import trange

for i in range(len(reform_df)):
    reform = create_reform(reform_df.iloc[i])
    reform_sim = Microsimulation(reform, year=2020)
    UBI_amounts += [reform_sim.calc(&quot;UBI&quot;).max()]
    poverty_changes += [
        rel(
            baseline.calc(&quot;in_poverty_bhc&quot;, map_to=&quot;person&quot;).mean(),
            reform_sim.calc(&quot;in_poverty_bhc&quot;, map_to=&quot;person&quot;).mean(),
        )
    ]
    deep_poverty_changes += [
        rel(
            baseline.calc(&quot;in_deep_poverty_bhc&quot;, map_to=&quot;person&quot;).mean(),
            reform_sim.calc(&quot;in_deep_poverty_bhc&quot;, map_to=&quot;person&quot;).mean(),
        )
    ]
    gini_changes += [
        rel(
            baseline.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;).gini(),
            reform_sim.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;).gini(),
        )
    ]
    winners += [
        (
            reform_sim.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;)
            &amp;gt; baseline.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;) + 1
        ).mean()
    ]
    losers += [
        (
            reform_sim.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;)
            &amp;lt; baseline.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;) - 1
        ).mean()
    ]
    costs += [net_cost(baseline, reform_sim)]
    
results_df = pd.DataFrame(
    {
        &quot;UBI amount (£/week)&quot;: (pd.Series(UBI_amounts) / 52).astype(int),
        &quot;Poverty change (%)&quot;: pd.Series(poverty_changes).apply(
            lambda x: round(x * 100, 1)
        ),
        &quot;Deep poverty change (%)&quot;: pd.Series(deep_poverty_changes).apply(
            lambda x: round(x * 100, 1)
        ),
        &quot;Winners (%)&quot;: pd.Series(winners).apply(lambda x: round(x * 100, 1)),
        &quot;Losers (%)&quot;: pd.Series(losers).apply(lambda x: round(x * 100, 1)),
        &quot;Inequality change (%)&quot;: pd.Series(gini_changes).apply(
            lambda x: round(x * 100, 1)
        ),
        &quot;Net cost (£bn/year)&quot;: pd.Series(costs).apply(
            lambda x: round(x / 1e9, 1)
        ),
    }
)

output = pd.concat([reform_df, results_df], axis=1)
output.index = [
    &quot;Baseline&quot;,
    &quot;Budget-neutral Working Group reform&quot;,
    &quot;Full PA/PT elimination&quot;,
    &quot;Include pensioners&quot;,
    &quot;Include children&quot;,
    &quot;Exclude from means tests&quot;,
    &quot;All&quot;,
]
output

    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_disciplinary_beginning() {
  var x = document.getElementById(&quot;code_block_disciplinary_beginning&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_disciplinary_beginning_1&quot;).load(&quot;/assets/markdown_assets/post/graph_disciplinary_beginning_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_disciplinary_beginning_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Each of these adjustments produces more progressive outcomes. The most important adjustment for achieving more progressive outcomes is including children, which lowers the weekly amount from £42 to £32: of all the adjustments we considered, this most reduces poverty, inequality, and the population share that comes out behind. Fully eliminating the Personal Allowance and Primary Threshold, which would raise the weekly amount from £42 to £55, produces the greatest reduction in deep poverty.&lt;/p&gt;

&lt;p&gt;The most progressive approach is implementing all the adjustments. Fully eliminating the Personal Allowance and Primary Threshold for all workers would fund a £36 weekly payment to each person, without counting as income toward means-tested programs. This would reduce poverty by 40%—3.6 times as much as the plan in the discussion paper. It would also reduce deep poverty 20% more than the discussion paper, and reduce inequality 130% more. Critically for political viability, it is the only approach that benefits the majority of individuals.&lt;/p&gt;

&lt;h1 id=&quot;lessons-align-with-other-simulations&quot;&gt;Lessons align with other simulations&lt;/h1&gt;

&lt;p&gt;This exploration shows that larger UBIs—both in generosity and inclusivity—deliver greater progressivity. The UBI Center’s US research findings mirror this lesson with respect to inclusivity:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/why-some-low-income-people-come-out-behind-in-andrew-yangs-freedom-dividend&quot;&gt;Excluding non-citizens was the primary reason Andrew Yang’s Freedom Dividend would leave some low-income people behind.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/child-ubi-share&quot;&gt;Including children in UBIs reduces poverty and inequality more.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/how-universal-basic-income-can-keep-poverty-from-rising-amid-covid19&quot;&gt;Including children and non-citizens makes for a more affordable Covid response.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://covid.ubicenter.org/fpuc&quot;&gt;Universal transfers (especially including kids) reduce poverty and inequality more than extended unemployment benefits, which reach only a small share of the population.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/student-debt&quot;&gt;UBI is more progressive than student debt forgiveness, which is similarly exclusively targeted.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our research on &lt;a href=&quot;/us-flat-tax&quot;&gt;flat income taxes&lt;/a&gt; also shows that more generous UBIs are more progressive, even when tax-funded, as does a comparison between our &lt;a href=&quot;/uk-blank-slate-ubi&quot;&gt;Blank Slate UBI model&lt;/a&gt; and more incremental reforms.&lt;/p&gt;

&lt;p&gt;Moreover, poverty, inequality, and how people fare compared to today are not the only factors to judge UBI policies on. Starting with a working age population could rhetorically fill a gap between Child Benefit and State Pension, and treating the UBI as income for means-testing can serve to reduce benefits’ scope without changing their structure. But as we showed in &lt;a href=&quot;/lib-dem-policy-paper&quot;&gt;yesterday’s analysis&lt;/a&gt;, the working group’s reforms didn’t change overall marginal tax rates substantially; true benefit reform may need to accompany the UBI policy to meaningfully improve work incentives and reduce bureaucratic burdens. So we’re left largely with the million Britons lifted out of poverty by a budget-neutral version of the working group’s UBI proposal, and the nearly three million more who’d be lifted out of poverty through a more expansive version of it.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;For the £45 per week UBI reform, the working group modeled lowering the Personal Allowance and Primary Threshold less than other reforms, to £4,000 and £50, respectively. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;max&quot;, &quot;nikhil&quot;]</name>
        
        
      </author>

      

      
        <category term="uk" />
      
        <category term="UK Liberal Democrats" />
      

      
        <summary type="html">More generous and inclusive basic income plans would reduce poverty and inequality more, and benefit more people.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Liberal Democrat UBI Policy Paper: An Analysis</title>
      <link href="/lib-dem-policy-paper" rel="alternate" type="text/html" title="Liberal Democrat UBI Policy Paper: An Analysis" />
      <published>2021-06-06T00:00:00+00:00</published>
      <updated>2021-06-06T00:00:00+00:00</updated>
      <id>/lib-dem-policy-paper</id>
      <content type="html" xml:base="/lib-dem-policy-paper">&lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://requirejs.org/docs/release/2.3.5/minified/require.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Last month, the Liberal Democrat UBI Working Group published a &lt;a href=&quot;https://d3n8a8pro7vhmx.cloudfront.net/libdems/pages/1811/attachments/original/1621669347/145_-_Universal_Basic_Income.docx_%281%29.pdf?1621669347&quot;&gt;policy paper&lt;/a&gt; exploring possible universal basic income policies for the party’s platform.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; This release follows the &lt;a href=&quot;https://www.libdems.org.uk/a20-ubi&quot;&gt;September Liberal Democrat Conference vote&lt;/a&gt; to campaign for universal basic income in future elections. The working group invites comments on the paper until tomorrow, 7th June.&lt;/p&gt;

&lt;p&gt;In this post, I assess the four UBI reforms described in the paper, which are partly offset by tax and benefit reforms.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; I find that each would reduce poverty by at least a sixth and deep poverty by half, while benefiting 7 in 10 Britons, though they would also add at least £20 billion to the annual deficit.&lt;/p&gt;

&lt;h2 id=&quot;policy-outlines&quot;&gt;Policy outlines&lt;/h2&gt;

&lt;p&gt;The details of the four reforms are shown in the table below. The reforms are mainly funded by tax changes, and recover additional costs through the benefit system. See Appendix A for more details and a comparison to estimates in the Liberal Democrat discussion paper.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_structured_mobile()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_structured_mobile&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import pandas as pd

table = pd.DataFrame(
    {
        &quot;UBI amount (£/week)&quot;: [45, 60, 75, 90],
        &quot;Personal Allowance (£/year)&quot;: [4000, 2500, 2500, 2500],
        &quot;NI Primary Threshold (£/week)&quot;: [90, 50, 50, 50],
        &quot;Eligible groups&quot;: [&quot;Working-age adults&quot;] * 4,
        &quot;UBI in benefit means tests&quot;: [&quot;Included&quot;] * 4,
    }
).set_index(&quot;UBI amount (£/week)&quot;)
table
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_structured_mobile() {
  var x = document.getElementById(&quot;code_block_structured_mobile&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_structured_mobile_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_structured_mobile_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_structured_mobile_1&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;tax-changes&quot;&gt;Tax changes&lt;/h3&gt;

&lt;p&gt;The Liberal Democrat UBI Working Group proposes two tax changes to fund the UBI expenditure: reducing the Personal Allowance (for working-age adults only) and reducing the National Insurance Primary Threshold.&lt;/p&gt;

&lt;p&gt;The Personal Allowance is a disregard for general income available to every individual with respect to Income Tax. In 2020, it had the value of £12,500 a year. For example, for an individual earning £22,500 a year, the Personal Allowance is deducted from taxable income to arrive at £10,000, which is taxed at the basic rate of 20%, resulting in a tax charge of £2,000. Reducing the Personal Allowance to £2,500 leaves the individual with £20,000 taxable income, resulting in a £4,000 Income Tax charge. The Working Group proposes lowering the Personal Allowance to £4,000 for the UBI of £45/week, and to £2,500 for the UBIs of £60, £75, and £90 per week.&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;National Insurance (NI) is a tax paid on employment earnings, comprising both employee and employer contributions. The Working Group proposes increasing employee NI contributions by reducing the Primary Threshold (PT). The threshold is currently set at £184/week: earnings under this are not taxed, earnings above this but under the Upper Earnings Limit (UEL, currently £967/week) are taxed at 12%, and earnings over the UEL are taxed at 2%.  The Working Group proposes reducing the PT to £90/week for the UBI of £45/week and to £50 for the larger UBI reforms.&lt;/p&gt;

&lt;h3 id=&quot;ubi-and-benefit-changes&quot;&gt;UBI and benefit changes&lt;/h3&gt;

&lt;p&gt;The Working Group proposes providing the basic income to working-age adults: individuals aged between 18 (inclusive) and the State Pension age (exclusive). This takes the form of a weekly payment in the amounts detailed below. The policies would not change existing benefit programs; however, UBI payments would be treated as earnings when existing benefits are means-tested. For example, if a person receives £70/week from Universal Credit and then is paid £60/week in UBI, their Universal Credit payment would be reduced at the 63% taper (assuming work allowances, set amounts of income disregarded by means tests, are exhausted) to arrive at £32.20 (which, combined with the £60 UBI, results in £93.20 - an increase of 33%).&lt;/p&gt;
&lt;h3 id=&quot;funding-breakdown&quot;&gt;Funding breakdown&lt;/h3&gt;

&lt;p&gt;Across reforms, the Personal Allowance reduction accounts for about two-thirds of the revenue, with the National Insurance threshold reduction accounting for a bit more than half of the remaining third.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_funky_portland()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_funky_portland&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
from ubicenter import format_fig
from openfisca_uk import Microsimulation
from reform import (
    WA_adult_UBI,
    include_UBI_in_means_tests,
    set_PA,
    set_PA_for_WA_adults,
    set_PT,
    net_cost,
)
import numpy as np
import pandas as pd
from tqdm import trange, tqdm
import plotly.express as px

baseline = Microsimulation(year=2020)
funding = (
    set_PA_for_WA_adults(2500),
    set_PT(50),
    include_UBI_in_means_tests(),
)
ubi_45 = (
    WA_adult_UBI(45 * 52),
    set_PA_for_WA_adults(4000),
    set_PT(90),
    include_UBI_in_means_tests(),
)
ubi_60 = (WA_adult_UBI(60 * 52), *funding)
ubi_75 = (WA_adult_UBI(75 * 52), *funding)
ubi_95 = (WA_adult_UBI(95 * 52), *funding)

breakdowns = []
for reform, name in zip((ubi_45, ubi_60, ubi_75, ubi_95), (45, 60, 75, 95)):
    net_costs = []
    component_names = [
        &quot;UBI&quot;,
        &quot;Lower PA&quot;,
        &quot;Lower PT&quot;,
        &quot;Reduced benefits&quot;,
        &quot;Remaining&quot;,
    ]
    for i in range(len(reform) + 1):
        net_costs += [
            net_cost(baseline, Microsimulation(reform[:i], year=2020))
        ]
    net_costs = np.array(net_costs)

    resulting_costs = pd.Series(net_costs[1:] - net_costs[:-1])
    resulting_costs = pd.Series(list(resulting_costs) + [net_costs[-1]])
    breakdown = pd.DataFrame(
        dict(
            UBI=f&quot;£{name}/week&quot;,
            component=component_names * 2,
            amount=[0]
            + list(resulting_costs.cumsum()[1:-1])
            + [0]
            + list(np.abs(resulting_costs)),
            Type=[&quot;Unaffected&quot;] * 5
            + [&quot;Spending&quot;]
            + [&quot;Revenue&quot;] * 3
            + [&quot;Spending&quot;],
        )
    )
    breakdowns += [breakdown]

fig = format_fig(
    px.bar(
        pd.concat(breakdowns),
        x=&quot;component&quot;,
        y=&quot;amount&quot;,
        color=&quot;Type&quot;,
        animation_frame=&quot;UBI&quot;,
        barmode=&quot;stack&quot;,
        color_discrete_sequence=[&quot;white&quot;, &quot;#1976D2&quot;, &quot;#BDBDBD&quot;],
    ).update_layout(
        title=&quot;Funding breakdown by reform&quot;,
        xaxis_title=&quot;Component&quot;,
        yaxis_title=&quot;Amount&quot;,
        yaxis_tickprefix=&quot;£&quot;,
        yaxis_range=[0, 210e9],
    )
)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_funky_portland() {
  var x = document.getElementById(&quot;code_block_funky_portland&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_funky_portland_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_funky_portland_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_funky_portland_1&quot;&gt;&lt;/div&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_funky_portland_2&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_funky_portland_2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_funky_portland_2&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;reform-effects&quot;&gt;Reform effects&lt;/h2&gt;

&lt;p&gt;All four of the reforms reduce poverty and inequality, and leave most better off. Their net costs range from £22bn  for the £45 UBI (about the cost of Housing Benefit) to £101bn for the £90 UBI (about the cost of State Pension). The below table shows the effects on the budget, as well as to poverty (absolute before housing costs), deep poverty (defined at half the poverty line) and inequality (measured by the Gini coefficient of disposable income).&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_verbal_tonight()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_verbal_tonight&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
from openfisca_uk.api import *


def get_results(reform: Reform):
    sim = Microsimulation(reform, year=2020)
    cost = net_cost(baseline, sim)
    ubi_cost = sim.calc(&quot;UBI&quot;).sum()
    reform_tax_revenue = sim.calc(&quot;tax&quot;).sum() - baseline.calc(&quot;tax&quot;).sum()
    benefit_revenue = ubi_cost - reform_tax_revenue - cost
    baseline_poverty = baseline.calc(&quot;in_poverty_bhc&quot;, map_to=&quot;person&quot;).mean()
    baseline_deep_poverty = baseline.calc(
        &quot;in_deep_poverty_bhc&quot;, map_to=&quot;person&quot;
    ).mean()
    poverty_change = (
        sim.calc(&quot;in_poverty_bhc&quot;, map_to=&quot;person&quot;).mean() - baseline_poverty
    ) / baseline_poverty
    deep_poverty_change = (
        sim.calc(&quot;in_deep_poverty_bhc&quot;, map_to=&quot;person&quot;).mean()
        - baseline_deep_poverty
    ) / baseline_deep_poverty
    baseline_gini = baseline.calc(
        &quot;household_net_income&quot;, map_to=&quot;person&quot;
    ).gini()
    inequality_change = (
        sim.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;).gini()
        - baseline_gini
    ) / baseline_gini
    baseline_income = baseline.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;)
    gain = sim.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;) - baseline_income
    percent_winners = (gain &amp;gt; 0).mean()
    percent_losers = (gain &amp;lt; 0).mean()
    return (
        sim,
        cost,
        poverty_change,
        deep_poverty_change,
        inequality_change,
        percent_winners,
        percent_losers,
        ubi_cost,
        benefit_revenue,
        reform_tax_revenue,
    )


reforms = (ubi_45, ubi_60, ubi_75, ubi_95)
names = (&quot;£45&quot;, &quot;£60&quot;, &quot;£75&quot;, &quot;£95&quot;)
results = list(map(get_results, reforms))
(
    sims,
    costs,
    poverty_changes,
    deep_poverty_changes,
    inequality_changes,
    percent_winners,
    percent_losers,
    ubi_cost,
    benefit_revenue,
    reform_tax_revenue,
) = list(zip(*results))
LD_lower = (13, 22, 48, 84)
LD_upper = (18, 28, 56, 93)
table = pd.DataFrame(
    {
        &quot;UBI (£/week)&quot;: names,
        &quot;Net cost (£bn)&quot;: pd.Series(costs).apply(lambda x: round(x / 1e9, 1)),
        &quot;Poverty change (%)&quot;: pd.Series(poverty_changes).apply(
            lambda x: round(x * 100, 1)
        ),
        &quot;Deep poverty change (%)&quot;: pd.Series(deep_poverty_changes).apply(
            lambda x: round(x * 100, 1)
        ),
        &quot;Inequality change (%)&quot;: pd.Series(inequality_changes).apply(
            lambda x: round(x * 100, 1)
        ),
        &quot;Winners (%)&quot;: pd.Series(percent_winners).apply(
            lambda x: round(x * 100, 1)
        ),
        &quot;Losers (%)&quot;: pd.Series(percent_losers).apply(
            lambda x: round(x * 100, 1)
        ),
    }
).set_index(&quot;UBI (£/week)&quot;)
table
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_verbal_tonight() {
  var x = document.getElementById(&quot;code_block_verbal_tonight&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_verbal_tonight_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_verbal_tonight_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_verbal_tonight_1&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;distributional-effects&quot;&gt;Distributional effects&lt;/h3&gt;

&lt;h4 id=&quot;inter-decile-effects&quot;&gt;Inter-decile effects&lt;/h4&gt;

&lt;p&gt;The above effects only show the picture on the population as a whole. Below shows the average gain to members of the population by their household’s equivalised disposable income. With deficit funding, the plans are able to show positive impacts on average for every decile in every reform; budget-neutral plans would have result in some deciles coming out behind on average.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_private_princeton()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_private_princeton&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import plotly.graph_objects as go
from ubicenter import format_fig

fig = go.Figure()

income = baseline.calc(&quot;equiv_household_net_income&quot;, map_to=&quot;person&quot;)

LIGHTER_BLUE = &quot;#ABCEEB&quot;  # Blue 100.
LIGHT_BLUE = &quot;#49A6E2&quot;  # Blue 700.
BLUE = &quot;#1976D2&quot;  # Blue 700.
DARK_BLUE = &quot;#0F4AA1&quot;  # Blue 900.

BLUE_COLORS = [LIGHTER_BLUE, LIGHT_BLUE, BLUE, DARK_BLUE]

for sim, name, color in zip(sims, names, BLUE_COLORS):
    gain = sim.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;) - baseline.calc(
        &quot;household_net_income&quot;, map_to=&quot;person&quot;
    )
    result = gain.groupby(income.decile_rank()).mean()
    fig.add_trace(
        go.Bar(x=result.index, y=result.values, name=name, marker_color=color)
    )

fig = format_fig(
    fig.update_layout(
        title=&quot;Change to net income by decile&quot;,
        xaxis_tickvals=list(range(1, 11)),
        xaxis_title=&quot;Equivalised disposable income decile&quot;,
        yaxis_title=&quot;Change to annual net income per year&quot;,
        yaxis_tickprefix=&quot;£&quot;,
    )
)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_private_princeton() {
  var x = document.getElementById(&quot;code_block_private_princeton&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_private_princeton_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_private_princeton_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_private_princeton_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Relative effects are stronger on the lower deciles, with higher amounts of UBI creating particularly strong increases in disposable income for the bottom decile.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_transparent_proxy()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_transparent_proxy&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = go.Figure()

income = baseline.calc(&quot;equiv_household_net_income&quot;, map_to=&quot;person&quot;)

LIGHTER_BLUE = &quot;#ABCEEB&quot;  # Blue 100.
LIGHT_BLUE = &quot;#49A6E2&quot;  # Blue 700.
BLUE = &quot;#1976D2&quot;  # Blue 700.
DARK_BLUE = &quot;#0F4AA1&quot;  # Blue 900.

BLUE_COLORS = [LIGHTER_BLUE, LIGHT_BLUE, BLUE, DARK_BLUE]

for sim, name, color in zip(sims, names, BLUE_COLORS):
    gain = sim.calc(&quot;household_net_income&quot;, map_to=&quot;person&quot;) - baseline.calc(
        &quot;household_net_income&quot;, map_to=&quot;person&quot;
    )
    decile_agg_income_baseline = (
        income[income &amp;gt; 0].groupby(income.decile_rank()).sum()
    )
    rel_gain = (
        gain[income &amp;gt; 0].groupby(income.decile_rank()).sum()
        / decile_agg_income_baseline
    )
    fig.add_trace(
        go.Bar(
            x=rel_gain.index, y=rel_gain.values, name=name, marker_color=color
        )
    )

fig = format_fig(
    fig.update_layout(
        title=&quot;Relative change to net income by income decile&quot;,
        xaxis_tickvals=list(range(1, 11)),
        xaxis_title=&quot;Equivalised disposable income decile&quot;,
        yaxis_title=&quot;Relative change per year&quot;,
        yaxis_tickformat=&quot;%&quot;,
    )
)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_transparent_proxy() {
  var x = document.getElementById(&quot;code_block_transparent_proxy&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_transparent_proxy_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_transparent_proxy_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_transparent_proxy_1&quot;&gt;&lt;/div&gt;

&lt;h4 id=&quot;intra-decile-effects&quot;&gt;Intra-decile effects&lt;/h4&gt;

&lt;p&gt;While the share of people gaining from the reforms is relatively similar across income groups, people in low-income households are more likely to see substantial gains and less likely to see net losses. Even with the £45 UBI, only about a third of the top three deciles lose income; this follows from the tax and benefit changes mostly affecting lower income sections, as well as people earning over £125,000 being currently ineligible for the Personal Allowance, and therefore unaffected by its reduction.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_computational_indie()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_computational_indie&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
import plotly.express as px
from charts import intra_decile_graph_data

intra = intra_decile_graph_data(baseline, *sims)

GREY = &quot;#BDBDBD&quot;

COLORS = (&quot;#616161&quot;, GREY, &quot;#F5F5F5&quot;, &quot;#C5E1A5&quot;, &quot;#558B2F&quot;,)[::-1]

fig = format_fig(
    px.bar(
        intra,
        x=&quot;fraction&quot;,
        y=&quot;decile&quot;,
        orientation=&quot;h&quot;,
        color=&quot;Outcome&quot;,
        animation_frame=&quot;UBI&quot;,
        color_discrete_sequence=COLORS,
    ).update_layout(
        yaxis_tickvals=list(range(1, 11)),
        xaxis_tickformat=&quot;%&quot;,
        yaxis_title=&quot;Income decile&quot;,
        xaxis_title=&quot;Outcome distributions&quot;,
        title=&quot;Intra-decile outcomes&quot;,
    )
)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_computational_indie() {
  var x = document.getElementById(&quot;code_block_computational_indie&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_computational_indie_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_computational_indie_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_computational_indie_1&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;individual-effects&quot;&gt;Individual effects&lt;/h2&gt;

&lt;p&gt;The above results show the impact on the population as it stands, but not the theoretical effects on household budgets. An individual living alone and who will claim Universal Credit sees their disposable income increased by the £45/week UBI reform at earnings under £30,000 and over £70,000 (see Appendix B for this analysis of other household types).&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_outside_garden()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_outside_garden&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
from openfisca_uk import IndividualSim
from ubicenter import format_fig

individual_colors = [GREY, BLUE]


def plot_budget(household_config, title):
    baseline_policy = IndividualSim()
    household_config(baseline_policy)
    baseline_policy.vary(&quot;employment_income&quot;)
    employment_income = baseline_policy.calc(&quot;employment_income&quot;)[0]
    budget_dfs = []
    for reform, name in zip(
        (ubi_45, ubi_60, ubi_75, ubi_95), (45, 60, 75, 95)
    ):
        ubi_policy = IndividualSim(reform)
        household_config(ubi_policy)
        ubi_policy.vary(&quot;employment_income&quot;)
        df = pd.DataFrame(
            {
                &quot;Net income (Baseline)&quot;: baseline_policy.calc(
                    &quot;household_net_income&quot;
                )[0],
                &quot;Net income (Reform)&quot;: ubi_policy.calc(&quot;household_net_income&quot;)[
                    0
                ],
                &quot;Tax (Baseline)&quot;: baseline_policy.calc(&quot;tax&quot;)[0],
                &quot;Tax (Reform)&quot;: ubi_policy.calc(&quot;tax&quot;)[0],
                &quot;Benefits (Baseline)&quot;: baseline_policy.calc(&quot;benefits&quot;)[0],
                &quot;Benefits (Reform)&quot;: ubi_policy.calc(&quot;benefits&quot;)[0],
                &quot;UBI (Reform)&quot;: ubi_policy.calc(&quot;UBI&quot;)[0],
                &quot;Employment income&quot;: employment_income,
                &quot;MTR (Baseline)&quot;: 1
                - baseline_policy.calc_deriv(
                    &quot;household_net_income&quot;,
                    var_target=&quot;household&quot;,
                    wrt_target=&quot;adult&quot;,
                ),
                &quot;MTR (Reform)&quot;: 1
                - ubi_policy.calc_deriv(
                    &quot;household_net_income&quot;,
                    var_target=&quot;household&quot;,
                    wrt_target=&quot;adult&quot;,
                ),
                &quot;Tax MTR (Baseline)&quot;: baseline_policy.calc_deriv(
                    &quot;tax&quot;, var_target=&quot;adult&quot;, wrt_target=&quot;adult&quot;
                ),
                &quot;Tax MTR (Reform)&quot;: ubi_policy.calc_deriv(
                    &quot;tax&quot;, var_target=&quot;adult&quot;, wrt_target=&quot;adult&quot;
                ),
                &quot;Income Tax MTR (Baseline)&quot;: baseline_policy.calc_deriv(
                    &quot;income_tax&quot;, var_target=&quot;adult&quot;, wrt_target=&quot;adult&quot;
                ),
                &quot;Income Tax MTR (Reform)&quot;: ubi_policy.calc_deriv(
                    &quot;income_tax&quot;, var_target=&quot;adult&quot;, wrt_target=&quot;adult&quot;
                ),
                &quot;NI MTR (Baseline)&quot;: baseline_policy.calc_deriv(
                    &quot;national_insurance&quot;,
                    var_target=&quot;adult&quot;,
                    wrt_target=&quot;adult&quot;,
                ),
                &quot;NI MTR (Reform)&quot;: ubi_policy.calc_deriv(
                    &quot;national_insurance&quot;,
                    var_target=&quot;adult&quot;,
                    wrt_target=&quot;adult&quot;,
                ),
                &quot;Benefit MTR (Baseline)&quot;: -baseline_policy.calc_deriv(
                    &quot;benefits&quot;, var_target=&quot;adult&quot;, wrt_target=&quot;adult&quot;
                ),
                &quot;Benefit MTR (Reform)&quot;: -ubi_policy.calc_deriv(
                    &quot;benefits&quot;, var_target=&quot;adult&quot;, wrt_target=&quot;adult&quot;
                ),
            }
        )
        df[&quot;UBI&quot;] = f&quot;£{name}/week&quot;
        budget_dfs += [df]

    fig = px.line(
        pd.concat(budget_dfs),
        x=&quot;Employment income&quot;,
        y=[
            &quot;Net income (Baseline)&quot;,
            &quot;Net income (Reform)&quot;,
            &quot;Tax (Baseline)&quot;,
            &quot;Tax (Reform)&quot;,
            &quot;Benefits (Baseline)&quot;,
            &quot;Benefits (Reform)&quot;,
            &quot;UBI (Reform)&quot;,
        ],
        animation_frame=&quot;UBI&quot;,
        color_discrete_sequence=individual_colors,
    ).update_layout(
        title=title,
        yaxis_tickprefix=&quot;£&quot;,
        xaxis_tickprefix=&quot;£&quot;,
        yaxis_title=&quot;Yearly amount&quot;,
        xaxis_title=&quot;Employment income&quot;,
        legend_title_text=&quot;&quot;,
    )
    hidden = [False] * 2 + [True] * 5
    for i in range(7):
        if hidden[i]:
            fig.data[i].visible = &quot;legendonly&quot;

    return format_fig(fig), pd.concat(budget_dfs)


def single_person_UC(sim):
    sim.add_person(age=26, is_benunit_head=True, name=&quot;adult&quot;),
    sim.add_benunit(adults=[&quot;adult&quot;], claims_UC=True),
    sim.add_household(adults=[&quot;adult&quot;])


fig, budget_df = plot_budget(
    single_person_UC,
    &quot;Effect of UBI reforms on the relationship between employment income and net income&quot;,
)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_outside_garden() {
  var x = document.getElementById(&quot;code_block_outside_garden&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_outside_garden_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_outside_garden_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_outside_garden_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;The reforms also affect marginal tax rates: the PA decrease imposes the basic, higher and additional rates on taxpayers with lower incomes, the UBI amounts effectively reduce the benefit work disregards, and the PT decrease applies the 12% rate onto lower-income earners.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_nuclear_response()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_nuclear_response&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
mtr_graph = px.line(
    budget_df[::5],
    x=&quot;Employment income&quot;,
    y=[
        &quot;MTR (Baseline)&quot;,
        &quot;MTR (Reform)&quot;,
        &quot;Tax MTR (Baseline)&quot;,
        &quot;Tax MTR (Reform)&quot;,
        &quot;Income Tax MTR (Baseline)&quot;,
        &quot;Income Tax MTR (Reform)&quot;,
        &quot;NI MTR (Baseline)&quot;,
        &quot;NI MTR (Reform)&quot;,
        &quot;Benefit MTR (Baseline)&quot;,
        &quot;Benefit MTR (Reform)&quot;,
    ],
    animation_frame=&quot;UBI&quot;,
    color_discrete_sequence=individual_colors,
).update_layout(
    title=&quot;Effect of UBI reforms on marginal tax rates&quot;,
    yaxis_tickformat=&quot;%&quot;,
    xaxis_tickprefix=&quot;£&quot;,
    yaxis_title=&quot;Yearly amount&quot;,
    xaxis_title=&quot;Employment income&quot;,
    legend_title_text=&quot;&quot;,
)
hidden = [False] * 2 + [True] * 8
for i in range(10):
    if hidden[i]:
        mtr_graph.data[i].visible = &quot;legendonly&quot;

fig = format_fig(mtr_graph)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_nuclear_response() {
  var x = document.getElementById(&quot;code_block_nuclear_response&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_nuclear_response_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_nuclear_response_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_nuclear_response_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Few political parties around the world have endorsed UBI as the Liberal Democrats have, and in releasing this discussion paper with specific policies, they have taken that endorsement to an unprecedented level of seriousness. While these policies don’t achieve full budget-neutrality, the discussion paper also mentions other revenue options, such as raising NI rates and tax rates on corporations, capital gains, and personal income. And while they don’t achieve the progressivity of &lt;a href=&quot;(/uk-blank-slate-ubi)&quot;&gt;more dramatic reforms&lt;/a&gt;, they would nonetheless reduce poverty and inequality more than any policy perhaps since the dawn of the NHS. The party’s final proposal will represent yet another unprecedented step in the UK’s embrace of UBI, and we look forward to reviewing it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update: &lt;a href=&quot;/progressive-adjustments-lib-dem-working-group&quot;&gt;Read our follow-up&lt;/a&gt; describing progressive adjustments that could be made to this framework.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;appendix-a-costing-estimates&quot;&gt;Appendix A: Costing estimates&lt;/h3&gt;

&lt;p&gt;The Working Group used different modelling methods than were used in this analysis, resulting in our analysis producing higher net costs than the Working Group found. This is primarily due to the fact that this analysis used a household simulation method, rather than administrative data from HMRC. This allows for finer levels of detail and distributional analysis, but high incomes and benefit receipts are under-reported, causing an underestimate of the revenue raised by the tax reforms. The Working Group also assumed full Universal Credit take-up, whereas this analysis considers legacy benefits reported in the Family Resources Survey. The details are shown in the table below.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_former_notion()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_former_notion&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
LD_lower = (13, 22, 48, 84)
LD_upper = (18, 28, 56, 93)
table = pd.DataFrame(
    {
        &quot;UBI (£/week)&quot;: names,
        &quot;LD net cost (£bn)&quot;: [
            f&quot;{low}-{high}&quot; for low, high in zip(LD_lower, LD_upper)
        ],
        &quot;Simulated net cost (£bn)&quot;: pd.Series(costs).apply(
            lambda x: round(x / 1e9, 1)
        ),
        &quot;UBI cost&quot;: pd.Series(ubi_cost).apply(lambda x: round(x / 1e9, 1)),
        &quot;Tax revenue&quot;: pd.Series(reform_tax_revenue).apply(
            lambda x: round(x / 1e9, 1)
        ),
        &quot;Reduced benefits&quot;: pd.Series(benefit_revenue).apply(
            lambda x: round(x / 1e9, 1)
        ),
        &quot;Difference from central estimate (£bn)&quot;: [
            round((c - (low + high) / 2 * 1e9) / 1e9, 1)
            for c, low, high in zip(costs, LD_lower, LD_upper)
        ],
    }
).set_index(&quot;UBI (£/week)&quot;)
table
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_former_notion() {
  var x = document.getElementById(&quot;code_block_former_notion&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_former_notion_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_former_notion_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_former_notion_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Thanks to Kevin Langford, who provided more details on the policy proposal by the Working Group not present in the discussion paper, and on the modelling approaches that produced the cost estimates. Some of the mechanics of this type of scheme are set out in Langfords paper, &lt;a href=&quot;https://radixuk.org/papers/money-for-nothing/&quot;&gt;&lt;i&gt;Money for Nothing?&lt;/i&gt;&lt;/a&gt;, published in May 2021 with Radix.&lt;/p&gt;

&lt;h3 id=&quot;appendix-b-relationships-between-employment-and-net-income-for-other-household-types&quot;&gt;Appendix B: Relationships between employment and net income for other household types&lt;/h3&gt;

&lt;p&gt;Below is a selection of the theoretical effects on different household types.&lt;/p&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_internal_warning()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_internal_warning&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
def couple_UC(sim):
    sim.add_person(age=26, is_benunit_head=True, name=&quot;adult&quot;),
    sim.add_person(age=27, is_benunit_head=False, name=&quot;adult2&quot;),
    sim.add_benunit(adults=[&quot;adult&quot;, &quot;adult2&quot;], claims_UC=True),
    sim.add_household(adults=[&quot;adult&quot;, &quot;adult2&quot;])


fig, budget_df = plot_budget(couple_UC, &quot;Couple on Universal Credit&quot;)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_internal_warning() {
  var x = document.getElementById(&quot;code_block_internal_warning&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_internal_warning_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_internal_warning_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_internal_warning_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_settled_authentication()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_settled_authentication&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
mtr_graph = px.line(
    budget_df[::5],
    x=&quot;Employment income&quot;,
    y=[
        &quot;MTR (Baseline)&quot;,
        &quot;MTR (Reform)&quot;,
        &quot;Tax MTR (Baseline)&quot;,
        &quot;Tax MTR (Reform)&quot;,
        &quot;Income Tax MTR (Baseline)&quot;,
        &quot;Income Tax MTR (Reform)&quot;,
        &quot;NI MTR (Baseline)&quot;,
        &quot;NI MTR (Reform)&quot;,
        &quot;Benefit MTR (Baseline)&quot;,
        &quot;Benefit MTR (Reform)&quot;,
    ],
    animation_frame=&quot;UBI&quot;,
    color_discrete_sequence=individual_colors,
).update_layout(
    title=&quot;Effect of UBI reforms on marginal tax rates (Couple, UC)&quot;,
    yaxis_tickformat=&quot;%&quot;,
    xaxis_tickprefix=&quot;£&quot;,
    yaxis_title=&quot;Yearly amount&quot;,
    xaxis_title=&quot;Employment income&quot;,
    legend_title_text=&quot;&quot;,
)
hidden = [False] * 2 + [True] * 8
for i in range(10):
    if hidden[i]:
        mtr_graph.data[i].visible = &quot;legendonly&quot;

fig = format_fig(mtr_graph)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_settled_authentication() {
  var x = document.getElementById(&quot;code_block_settled_authentication&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_settled_authentication_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_settled_authentication_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_settled_authentication_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_welsh_seating()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_welsh_seating&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
def couple_children_UC(sim):
    sim.add_person(age=26, is_benunit_head=True, name=&quot;adult&quot;),
    sim.add_person(age=27, name=&quot;adult2&quot;),
    sim.add_person(age=3, name=&quot;child&quot;),
    sim.add_person(age=4, name=&quot;child2&quot;),
    sim.add_benunit(
        adults=[&quot;adult&quot;, &quot;adult2&quot;],
        children=[&quot;child&quot;, &quot;child2&quot;],
        claims_UC=True,
        claims_child_benefit=True,
    )
    sim.add_household(adults=[&quot;adult&quot;, &quot;adult2&quot;], children=[&quot;child&quot;, &quot;child2&quot;])


fig, budget_df = plot_budget(
    couple_children_UC, &quot;Couple with two children on Universal Credit&quot;
)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_welsh_seating() {
  var x = document.getElementById(&quot;code_block_welsh_seating&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_welsh_seating_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_welsh_seating_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_welsh_seating_1&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button onclick=&quot;show_code_buried_grounds()&quot;&gt;Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div id=&quot;code_block_buried_grounds&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
mtr_graph = px.line(
    budget_df[::5],
    x=&quot;Employment income&quot;,
    y=[
        &quot;MTR (Baseline)&quot;,
        &quot;MTR (Reform)&quot;,
        &quot;Tax MTR (Baseline)&quot;,
        &quot;Tax MTR (Reform)&quot;,
        &quot;Income Tax MTR (Baseline)&quot;,
        &quot;Income Tax MTR (Reform)&quot;,
        &quot;NI MTR (Baseline)&quot;,
        &quot;NI MTR (Reform)&quot;,
        &quot;Benefit MTR (Baseline)&quot;,
        &quot;Benefit MTR (Reform)&quot;,
    ],
    animation_frame=&quot;UBI&quot;,
    color_discrete_sequence=individual_colors,
).update_layout(
    title=&quot;Effect of UBI reforms on marginal tax rates (Couple, two children, UC)&quot;,
    yaxis_tickformat=&quot;%&quot;,
    xaxis_tickprefix=&quot;£&quot;,
    yaxis_title=&quot;Yearly amount&quot;,
    xaxis_title=&quot;Employment income&quot;,
    legend_title_text=&quot;&quot;,
)
hidden = [False] * 2 + [True] * 8
for i in range(10):
    if hidden[i]:
        mtr_graph.data[i].visible = &quot;legendonly&quot;

fig = format_fig(mtr_graph)
fig
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function show_code_buried_grounds() {
  var x = document.getElementById(&quot;code_block_buried_grounds&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
  } else {
    x.style.display = &quot;none&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#graph_graph_buried_grounds_1&quot;).load(&quot;/assets/markdown_assets/libdem-ubi-analysis/graph_buried_grounds_1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;graph_graph_buried_grounds_1&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;The findings from the Working Group’s paper were presented by Paul Noblet, the chair, in the &lt;a href=&quot;https://www.socialliberal.net/what_kind_of_ubi_recording&quot;&gt;recorded Social Liberal Forum event&lt;/a&gt; What Kind of UBI?, in which Jane Dodds (Leader of the Liberal Democrats in Wales), Christine Jardine (Liberal Democrat MP for Edinburgh West) and Max Ghenis (Founder of the UBI Center) gave first responses to the proposals. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Modeling was carried out using the open-sourced static microsimulation model &lt;a href=&quot;https://github.com/PSLmodels/openfisca-uk&quot;&gt;OpenFisca-UK&lt;/a&gt;. The code to reproduce all figures and findings is available on &lt;a href=&quot;https://github.com/ubicenter/libdem-ubi-analysis&quot;&gt;GitHub&lt;/a&gt;. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;The higher allowance and threshold in the first reform increases the net cost by around £8bn. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Nikhil Woodruff</name>
        
        
      </author>

      

      
        <category term="uk" />
      

      
        <summary type="html">The UK party is exploring UBI reforms that would reduce poverty and inequality.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Blank slate UBI: A constructive challenge for the UK basic income debate</title>
      <link href="/uk-blank-slate-ubi" rel="alternate" type="text/html" title="Blank slate UBI: A constructive challenge for the UK basic income debate" />
      <published>2021-05-12T00:00:00+00:00</published>
      <updated>2021-05-12T00:00:00+00:00</updated>
      <id>/uk-blank-slate-ubi</id>
      <content type="html" xml:base="/uk-blank-slate-ubi">&lt;h2 id=&quot;read-the-report-here&quot;&gt;&lt;a href=&quot;https://d3n8a8pro7vhmx.cloudfront.net/socialliberalforum/pages/3398/attachments/original/1620835589/SLF_UBI_Center_Report_FINAL.pdf?1620835589&quot;&gt;Read the report here&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We’re thrilled to have launched our first report in the UK: &lt;a href=&quot;https://d3n8a8pro7vhmx.cloudfront.net/socialliberalforum/pages/3398/attachments/original/1620835589/SLF_UBI_Center_Report_FINAL.pdf?1620835589&quot;&gt;“Blank Slate UBI: A Constructive Challenge for the UK Basic Income Debate.”&lt;/a&gt; The report, which we published with the UK’s &lt;a href=&quot;https://www.socialliberal.net/&quot;&gt;Social Liberal Forum&lt;/a&gt;, models three audacious budget-neutral UBI plans. These plans replace the existing tax and benefit system with a 50 percent flat income tax, which funds UBIs of between £60 and £221 per week, depending on age and policy design, including supplements for disability and region. As a result, poverty would fall by 32 percent or more, deep poverty by 86 percent, and the Gini inequality index by at least 8 percent; 58 percent of Britons would come out ahead on a net basis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2021-05-13-uk-blank-slate-ubi/table.png&quot; alt=&quot;Summary statistics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This report is the UBI Center’s first simulation of UBI in the UK, and the first application of the &lt;a href=&quot;https://github.com/PSLmodels/openfisca-uk/&quot;&gt;OpenFisca-UK&lt;/a&gt; open-source microsimulation model of the UK tax and benefit system, which the UBI Center developed with &lt;a href=&quot;http://openfisca.org&quot;&gt;OpenFisca&lt;/a&gt; and the &lt;a href=&quot;http://pslmodels.org&quot;&gt;Policy Simulation Library&lt;/a&gt;. The report also demonstrates the first budget-neutral UK simulation to fund such generous UBI amounts—an average of £140 per week—and to reduce poverty to such a degree.&lt;/p&gt;

&lt;p&gt;As an example of the progressivity that can be achieved with this kind of wholesale reform, consider the effect by decile. Under each of the three reforms, the bottom decile benefits by at least 50 percent on average, while the upper three deciles lose 6-7 percent of their income.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2021-05-13-uk-blank-slate-ubi/decile_pct.png&quot; alt=&quot;Average percent effect by decile&quot; title=&quot;Average percent effect by decile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The effect is progressive not only on an average basis but also within deciles; for example, 92 percent of the bottom decile would see their incomes rise by at least 5 percent, compared to only 8 percent of the top decile with major gains (considering our reform with a disability supplement). We applied optimization algorithms to design the UBI policies as to minimize these losses.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2021-05-13-uk-blank-slate-ubi/within_decile_2.png&quot; alt=&quot;Distribution of effects by decile&quot; title=&quot;Distribution of effects by decile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The UBI discussion may be more advanced in the UK than in any country on Earth, and this launch marks only the beginning of our investment to contribute data and evidence to that discussion.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To hear more about this report, join the &lt;a href=&quot;https://www.socialliberal.net/what_kind_of_ubi&quot;&gt;Social Liberal Forum’s event&lt;/a&gt; today (Thursday) at 19:00 UK time, including Max Ghenis (president of the UBI Center and one of the report’s authors), along with Paul Noblet (chair of the Liberal Democrats UBI Policy Working Group), Christine Jardine (MP for Edinburgh West and Liberal Democrat lead on the Cross-Party Parliamentary and Local Government Working Group on UBI), and Jane Dodds (Leader of the Liberal Democrats in Wales, and chair of the Lib Dems for Basic Income campaign group).&lt;/em&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>[&quot;max&quot;, &quot;nikhil&quot;, &quot;deepak&quot;, &quot;charles&quot;]</name>
        
        
      </author>

      

      
        <category term="uk" />
      

      
        <summary type="html">Our first UK report, published with the Social Liberal Forum, simulates audacious UBI-centered reforms to the tax and benefit systems.</summary>
      

      
      
    </entry>
  
</feed>
